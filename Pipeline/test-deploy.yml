trigger: none

# Create templates in this repository.
resources:
  repositories:
  - repository: Templates
    type: git
    name: 'AlwaysOn'

variables: 
  paramsroot: $(Pipeline.Workspace)\drop\Parameters
  armroot: $(Pipeline.Workspace)\drop\ARM
  scriptsroot: $(Pipeline.Workspace)\drop\Scripts
  paramsfileprefix: 'test'
  environment: 'TEST'
  azureSubscription: 'Azure_test'

stages:
# Download the universal packages/ARM templates for pipeline.
- stage: Build
  displayName: 'Download Artifacts'
  jobs:
  - job: Download_Modules_And_Create_BuildArtifact
    displayName: "Download ACF Artifacts"
    pool:
      name: Hosted Windows 2019 with VS2019
    continueOnError: 'true'

    steps:

    - task: CopyFiles@2
      displayName: 'Copy files to: $(build.artifactstagingdirectory)\'
      inputs:
        SourceFolder: ''
        TargetFolder: '$(build.artifactstagingdirectory)'
        CleanTargetFolder: true
        OverWrite: true

# All repo files will be used in the deployment. 

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifact'
      inputs:
        artifactName: 'drop'
        pathtoPublish: '$(build.artifactstagingdirectory)'

# Deploy in Azure

- stage: Test_Deploy
  dependsOn:
  - Build
  condition: 
  jobs:

  - job: Deploy_KeyVault
    condition: 
    pool:
      name: Hosted VS2017
    steps:
    - download: current
      artifact: 'drop'

    - task: AzurePowerShell@4
      inputs:
        azureSubscription: 'Azure_test'
        ScriptType: 'FilePath'
        ScriptPath: ${{ variables.scriptsroot }}\deploy.ps1
        ScriptArguments: -DeploymentName KeyVault-$(Build.BuildNumber)
                    -TemplateFile ${{ variables.armroot }}\KV\deploy.json
                    -ParametersFile ${{ variables.paramsroot }}\KV\test.parameters.json
                    -ResourceGroupParametersFile ${{ variables.paramsroot }}\ResourceGroup\test.parameters.json

        azurePowerShellVersion: LatestVersion
        errorActionPreference: stop
        
    - task: AzurePowerShell@4
      inputs:
        azureSubscription: 'Azure_test'
        ScriptType: 'FilePath'
        ScriptPath: ${{ variables.scriptsroot }}\deploy_secrets.ps1

        azurePowerShellVersion: LatestVersion
        errorActionPreference: stop        
        
        
        
        
